Deprecate the usage of `this` as a parameter type

Before this patch, the keyword `this` could be used as a function
parameter type. This is incosistent with the meaning of `this`
(the current instance of an aggregate declaration). In addition,
accepting `this` as a function parameter type leads to inconsistencies
when defining a struct postblit:

---
struct A
{
    this(this a) {}
}
---

In the above example `this(this a)` is not considered a postblit,
but a constructor which has a parameter of type `A` named `a`.
This is incosistent with the D optional parameter system where
a function `int fun(int a)` is equivalent to `int fun(int)` if
the parameter is unused.

After this patch, the compiler will issue a deprecation warning
whenever it encounters this as a parameter type:

---
struct A
{
    this(this a) {} // Deprecation: `this` cannot be used as a parameter type.
                    //Use `typeof(this)` instead

    this(int a, this b) {} // ditto
}
---
